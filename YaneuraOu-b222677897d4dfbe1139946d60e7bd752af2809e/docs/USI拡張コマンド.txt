
USIプロトコルの独自拡張コマンド

・オプション

set option name XXX value ...で設定できるoption

	注意) USI_Hash , USI_Ponderで設定された値は無視されます。

	Threads			: 思考するスレッド数
	Hash			: 置換表のサイズ(単位[MB])
	Ponder			: ponder(相手番での思考) on/off
	WriteDebugLog   : 標準入出力をファイル("io_log.txt")にリダイレクトする(logコマンドでonには出来る)
	NetworkDelay    : 通信時の遅延時間[ms]
				これを例えば400に設定しておくと、秒読み10秒のときに9.7秒で指し手を送信します。
	Contempt        : 引き分けを受け入れるスコア。歩を100とする。例えば、この値を100にすると引き分けの局面は
	                  評価値が -100とみなされる。(互角と思っている局面であるなら引き分けを選ばずに他の指し手を選ぶ)
	MultiPV         : その局面での上位N個の候補手を調べる機能

	// やねうら王classic時

	NarrowBook		: 実現確率の低い定跡を採用しない
	Param1			: パラメーターの自動調整用X軸
	Param2			: パラメーターの自動調整用Y軸


	// 協力詰めsolver時

	CM_Hash			: 協力詰め時の置換表サイズ(単位[MB])


・コマンド

	d       : Debug デバッグ用に現在の局面を表示する。
	s       : Sashite 指し手生成のスピードテストを行なう。
	         王手がかかっているときはEVASIONS,かかっていないときはNON_EVASIONS
	eval    : 現在の局面に対して評価関数を呼び出して評価値を出力する。
	matsuri : 指し手生成祭りの局面を現在の局面としてセットする。
	moves   : 現在の局面の合法手(LEGAL_ALL)をすべて出力する。
	sfen    : "position sfen"の略。"d"コマンドで表示されたsfen文字列をコピペするときに便利。
	key		: 現在の局面に対して局面のhash keyを出力
	mated   : 現在の局面に対して詰み判定を呼び出す。詰んでいれば1。さもなくば0。
	mate1   : 現在の局面に対してmate1ply()を呼び出す。

	bench   : ベンチマーク
		bench [置換表サイズ][スレッド数][LimitType = depth , nodes, time][←の指定][局面の指定]
		例)
			bench 1024 1 depth 10
			※　パラメーター省略時は上記の設定
		
		[局面の指定]について
		  "default"=デフォルトの局面、"current"=現在の局面、
		  それ以外 = ファイル名とみなしてそのsfenファイルを読み込む

		例) bench 1024 1 depth 10 current


	test    : テスト用コマンド
		test unit            : unit test
		test perft [depth]   : perft(パフォーマンステスト)。深さを指定できる。
		test rp    [回数]    : random playerのテスト。回数を指定できる。
		test rpbench [回数]  : ランダムプレイヤーを用いたbenchマーク。
		test checks [回数]	 : ランダムプレイヤーで対局させて、王手の指し手生成ルーチンで指し手が
								正しく生成出来ているかをテストする。
		test autoplay [回数] : 思考ルーチンを呼び出して連続自己対戦をさせる。

	log		: ログファイル("io_log.txt")に標準入出力を書き出す設定。Write Debug Logでon/offも出来る。

	makebook : 定跡作成コマンド。詳しくは doc/解説.txt のほうを参考に。

拡張コマンド
	go rtime 100
	とすると、今回の思考時間として、100～300[ms]を使って思考する。
